
<% layout('/layouts/boilerplate') %>
<head>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <h3>Edit Your Listings</h3>
    <form class="edit-listing-form needs-validation" method="POST" action="/listings/<%= editListings._id %>?_method=PUT" novalidate>
        <div class="form-group">
            <label for="title">Title</label>
            <input name="listings[title]" id="title" class="form-control" value="<%= editListings.title %>" type="text" required>
            <div class="invalid-feedback" id="titleError">Title is required</div>
        </div>

        <div class="form-group">
            <label for="description">Description</label>
            <textarea name="listings[description]" id="description" class="form-control" required><%= editListings.description %></textarea>
            <div class="invalid-feedback" id="descriptionError">Description is required</div>
        </div>

        <div class="form-group">
            <label for="imageUrl">Image URL</label>
            <input name="listings[image][url]" id="imageUrl" class="form-control" value="<%= editListings.image.url %>" placeholder="Enter the image URL">
            <div class="invalid-feedback" id="imageUrlError">Please enter a valid image URL</div>
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <input name="listings[price]" id="price" class="form-control" value="<%= editListings.price %>" type="number" required>
            <div class="invalid-feedback" id="priceError">Price must be a positive number</div>
        </div>

        <div class="form-group">
            <label for="location">Location</label>
            <input name="listings[location]" id="location" class="form-control" value="<%= editListings.location %>" type="text" required>
            <div class="invalid-feedback" id="locationError">Location is required</div>
        </div>

        <div class="form-group">
            <label for="country">Country</label>
            <input name="listings[country]" id="country" class="form-control" value="<%= editListings.country %>" type="text" required>
            <div class="invalid-feedback" id="countryError">Country is required</div>
        </div>

        <button type="submit" class="btn btn-primary">Edit</button>
    </form>

    <script>
        (() => {
            // getting all this listings
            const forms = document.querySelectorAll('.needs-validation');
        
            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    let isValid = true;
                    
                    // Clear previous error messages
                    document.querySelectorAll('.invalid-feedback').forEach(element => element.style.display = 'none');
        
                    // Title validation
                    const title = document.getElementById('title').value;
                    if (title.trim() === '') {
                        document.getElementById('titleError').style.display = 'block';
                        isValid = false;
                    }
        
                    // Description validation
                    const description = document.getElementById('description').value;
                    if (description.trim() === '') {
                        document.getElementById('descriptionError').style.display = 'block';
                        isValid = false;
                    }
        
                    // Price validation
                    const price = document.getElementById('price').value;
                    if (price <= 0) {
                        document.getElementById('priceError').style.display = 'block';
                        isValid = false;
                    }
        
                    // Image URL validation 
                    const imageUrl = document.getElementById('imageUrl').value;
                    const urlPattern = /^(https?:\/\/[^\s$.?#].[^\s]*)$/;
                    if (imageUrl && !urlPattern.test(imageUrl)) {
                        document.getElementById('imageUrlError').style.display = 'block';
                        isValid = false;
                    }
        
                    // Location validation
                    const location = document.getElementById('location').value;
                    if (location.trim() === '') {
                        document.getElementById('locationError').style.display = 'block';
                        isValid = false;
                    }
        
                    // Country validation
                    const country = document.getElementById('country').value;
                    if (country.trim() === '') {
                        document.getElementById('countryError').style.display = 'block';
                        isValid = false;
                    }
        
                    // Adding Bootstrap was-validated class to show validation 
                    form.classList.add('was-validated');
        
                    if (!isValid) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                }, false);
            })
        })();
    </script>
</body>
